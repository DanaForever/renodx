// ---- Created with 3Dmigoto v1.3.16 on Sun Aug 03 18:35:34 2025

cbuffer cbTemporalAA : register(b0)
{
  float4 g_screenSize : packoffset(c0);
  float4 g_frameBits : packoffset(c1);
  float4 g_uvJitterOffset : packoffset(c2);
  float4x4 g_motionMatrix : packoffset(c3);
  float4x4 g_reconstructMatrix : packoffset(c7);
  float4 g_unprojectParams : packoffset(c11);
  float g_maxLuminanceInv : packoffset(c12);
  bool g_gamePaused : packoffset(c12.y);
  bool g_hairUseAlphaTest : packoffset(c12.z);
  bool g_waterResponsiveAA : packoffset(c12.w);
}

SamplerState pointSampler_s : register(s0);
SamplerState linearSampler_s : register(s1);
Texture2D<float4> g_jitterTex : register(t0);
Texture2D<float4> g_historyTex : register(t1);
Texture2D<uint> g_historyBitTex : register(t2);
Texture2D<float4> g_depthTex : register(t3);
Texture2D<float4> g_prevDepthTex : register(t4);
Texture2D<uint2> g_stencilTex : register(t5);
Texture2D<float4> g_velocityTex : register(t6);
Texture2D<float4> g_prevVelocityTex : register(t7);


// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float3 o0 : SV_TARGET0,
  out uint o1 : SV_TARGET1)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23;
  uint4 bitmask, uiDest;
  float4 fDest;

  // r0.xyzw = g_jitterTex.SampleLevel(pointSampler_s, v1.xy, 0).xyzw;
  // // o0.rgb = r0.rgb;
  // o1 = r0.w;
  
  // return;

  r0.xyzw = g_screenSize.zwzw * float4(-0.5,-0.5,0.5,-0.5) + v1.xyxy;
  r1.xyzw = g_depthTex.Gather(pointSampler_s, r0.xy).xyzw;
  r2.yz = g_depthTex.Gather(pointSampler_s, r0.zw).yz;
  r3.xy = g_screenSize.zw * float2(-0.5,0.5) + v1.xy;
  r4.xz = g_depthTex.Gather(pointSampler_s, r3.xy).xy;
  r3.zw = g_screenSize.zw + v1.xy;
  r2.w = g_depthTex.SampleLevel(pointSampler_s, r3.zw, 0).x;
  r4.w = cmp(r1.y < r1.x);
  r5.xw = float2(0,1);
  r5.z = r1.y;
  r6.xy = float2(-1,0);
  r6.z = r1.x;
  r6.xyz = r4.www ? r5.xxz : r6.xyz;
  r4.w = cmp(r6.z < r1.z);
  r1.xy = float2(0,-1);
  r6.xyz = r4.www ? r6.xyz : r1.xyz;
  r1.y = cmp(r6.z < r1.w);
  r1.x = -1;
  r1.xyz = r1.yyy ? r6.xyz : r1.xxw;
  r1.w = cmp(r1.z < r2.y);
  r6.xy = float2(1,0);
  r6.z = r2.y;
  r1.xyz = r1.www ? r1.xyz : r6.xyz;
  r1.w = cmp(r1.z < r2.z);
  r2.xy = float2(1,-1);
  r1.xyz = r1.www ? r1.xyz : r2.xyz;
  r1.w = cmp(r1.z < r4.x);
  r2.xy = float2(-1,1);
  r2.z = r4.x;
  r1.xyz = r1.www ? r1.xyz : r2.xyz;
  r1.w = cmp(r1.z < r4.z);
  r4.xy = float2(0,1);
  r1.xyz = r1.www ? r1.xyz : r4.xyz;
  r1.z = cmp(r1.z < r2.w);
  r1.xy = r1.zz ? r1.xy : float2(1,1);
  r1.xy = r1.xy * g_screenSize.zw + v1.xy;
  r1.xz = g_velocityTex.SampleLevel(pointSampler_s, r1.xy, 0).xy;
  r1.w = cmp(abs(r1.x) >= 4);
  r2.x = cmp(r1.z != 1.000000);
  r1.w = r1.w ? r2.x : 0;
  r2.y = cmp(0 < r1.x);
  r2.z = cmp(r1.x < 0);
  r2.y = (int)-r2.y + (int)r2.z;
  r2.y = (int)r2.y;
  r2.y = -4 * r2.y;
  r1.w = r1.w ? r2.y : 0;
  r1.y = r1.x + r1.w;
  r1.xw = g_velocityTex.SampleLevel(pointSampler_s, v1.xy, 0).xy;
  r2.y = cmp(r1.w != 1.000000);
  r4.x = g_motionMatrix._m00;
  r4.y = g_motionMatrix._m01;
  r4.z = g_motionMatrix._m02;
  r4.w = g_motionMatrix._m03;
  r5.xy = v1.xy;
  r4.y = dot(r4.xyzw, r5.xyzw);
  r6.x = g_motionMatrix._m10;
  r6.y = g_motionMatrix._m11;
  r6.z = g_motionMatrix._m12;
  r6.w = g_motionMatrix._m13;
  r4.z = dot(r6.xyzw, r5.xyzw);
  r6.x = g_motionMatrix._m30;
  r6.y = g_motionMatrix._m31;
  r6.z = g_motionMatrix._m32;
  r6.w = g_motionMatrix._m33;
  r2.z = dot(r6.xyzw, r5.xyzw);
  r4.yz = r4.yz / r2.zz;
  r2.x = ~(int)r2.x;
  r2.z = cmp(g_gamePaused == 0);
  r2.x = (int)r2.z | (int)r2.x;
  r5.x = ~(int)r2.y;
  r5.yz = v1.xy + r1.yz;
  r4.x = 0;
  r2.xzw = r2.xxx ? r4.xyz : r5.xyz;
  // r5.xyzw = g_jitterTex.Gather(pointSampler_s, r0.xy).xyzw;
  // r6.xyzw = g_jitterTex.Gather(pointSampler_s, r0.xy).xyzw;
  // r7.xyzw = g_jitterTex.Gather(pointSampler_s, r0.xy).xyzw;
  r5.xyzw = g_jitterTex.SampleLevel(pointSampler_s, r0.xy, 0).xyzw;
  r6.xyzw = g_jitterTex.SampleLevel(pointSampler_s, r0.xy, 0).xyzw;
  r7.xyzw = g_jitterTex.SampleLevel(pointSampler_s, r0.xy, 0).xyzw;
  r5.xyzw = max(float4(0,0,0,0), r5.xyzw);
  r6.xyzw = max(float4(0,0,0,0), r6.xyzw);
  r7.xyzw = max(float4(0,0,0,0), r7.xyzw);
  r0.xy = float2(-0.5,-0.5) + r2.zw;
  r0.xy = cmp(float2(0.5,0.5) < abs(r0.xy));
  r0.x = (int)r0.y | (int)r0.x;
  if (r0.x != 0) {
    r8.x = r5.y;
    r8.y = r6.y;
    r8.z = r7.y;
    r8.w = 0;
  }
  if (r0.x == 0) {
    r0.x = g_depthTex.SampleLevel(pointSampler_s, v1.xy, 0).x;
    r0.y = cmp(abs(r1.x) >= 4);
    r1.y = r0.y ? r2.y : 0;
    r1.z = cmp(0 < r1.x);
    r4.x = cmp(r1.x < 0);
    r1.z = (int)-r1.z + (int)r4.x;
    r1.z = (int)r1.z;
    r1.z = -4 * r1.z;
    r1.y = (int)r1.z & (int)r1.y;
    r1.x = r1.x + r1.y;
    r1.xy = v1.xy + r1.xw;
    r1.xy = r2.yy ? r1.xy : r4.yz;
    // r1.zw = g_jitterTex.Gather(pointSampler_s, r0.zw).yz;
    // r4.xy = g_jitterTex.Gather(pointSampler_s, r0.zw).yz;
    // r0.zw = g_jitterTex.Gather(pointSampler_s, r0.zw).yz;
    // r4.zw = g_jitterTex.Gather(pointSampler_s, r3.xy).xy;
    // r9.xy = g_jitterTex.Gather(pointSampler_s, r3.xy).xy;
    // r3.xy = g_jitterTex.Gather(pointSampler_s, r3.xy).xy;
    r1.zw = g_jitterTex.SampleLevel(pointSampler_s, r0.zw, 0).yz;
    r4.xy = g_jitterTex.SampleLevel(pointSampler_s, r0.zw, 0).yz;
    r0.zw = g_jitterTex.SampleLevel(pointSampler_s, r0.zw, 0).yz;
    r4.zw = g_jitterTex.SampleLevel(pointSampler_s, r3.xy, 0).xy;
    r9.xy = g_jitterTex.SampleLevel(pointSampler_s, r3.xy, 0).xy;
    r3.xy = g_jitterTex.SampleLevel(pointSampler_s, r3.xy, 0).xy;
    r10.xyz = g_jitterTex.SampleLevel(pointSampler_s, r3.zw, 0).xyz;
    r11.xy = max(float2(0,0), r1.zw);
    r12.xy = max(float2(0,0), r4.xy);
    r0.zw = max(float2(0,0), r0.zw);
    r4.xy = max(float2(0,0), r4.zw);
    r9.xy = max(float2(0,0), r9.xy);
    r1.zw = max(float2(0,0), r3.xy);
    r3.xyz = max(float3(0,0,0), r10.xyz);
    r10.xy = g_screenSize.xy * v1.xy;
    r10.xy = (int2)r10.xy;
    r10.zw = float2(0,0);
    r3.w = g_stencilTex.Load(r10.xyz).y;
    r10.xy = (int2)r3.ww & int2(224,8);
    r10.zw = cmp((int2)r10.xx == int2(32,224));
    r3.w = cmp((int)r10.y != 0);
    r0.y = r0.y ? r3.w : 0;
    r13.xy = cmp(g_waterResponsiveAA != int2(0,0));
    r10.z = r10.z ? r13.x : 0;
    r0.y = (int)r0.y | (int)r10.z;
    r10.z = ~(int)r0.y;
    r3.w = r3.w ? r10.z : 0;
    if (r3.w != 0) {
      r13.xz = g_uvJitterOffset.xy + v1.xy;
      r13.xzw = g_jitterTex.SampleLevel(linearSampler_s, r13.xz, 0).xyz;
      r13.xzw = max(float3(0,0,0), r13.xzw);
    } else {
      r13.x = r5.y;
      r13.z = r6.y;
      r13.w = r7.y;
    }
    r14.xyz = g_historyTex.SampleLevel(linearSampler_s, r2.zw, 0).xyz;
    r15.xy = g_screenSize.xy * r2.zw;
    r16.xy = (uint2)r15.xy;
    r16.zw = float2(0,0);
    r3.w = g_historyBitTex.Load(r16.xyz).x;
    r15.xy = (int2)r15.xy;
    r15.zw = float2(0,0);
    r5.y = g_stencilTex.Load(r15.xyz).y;
    r5.y = (int)r5.y & 224;
    r5.y = cmp((int)r10.x != (int)r5.y);
    r6.y = r2.y ? 0.000000 : 0;
    bitmask.y = ((~(-1 << 1)) << 0) & 0xffffffff;  r2.y = (((uint)r2.y << 0) & bitmask.y) | ((uint)2 & ~bitmask.y);
    r2.y = r10.y ? r2.y : r6.y;
    r6.y = (int)r2.y + 4;
    r0.y = r0.y ? r6.y : r2.y;
    r2.y = (int)r0.y + 8;
    r0.y = r5.y ? r2.y : r0.y;
    r2.y = cmp(r0.x == 1.000000);
    r5.y = (int)r0.y + 128;
    r0.y = r2.y ? r5.y : r0.y;
    r2.y = (int)r0.y + 512;
    r0.y = r2.x ? r2.y : r0.y;
    r2.x = (int)r0.y + 2048;
    r0.y = r10.w ? r2.x : r0.y;
    r2.xy = -v1.xy + r2.zw;
    r2.xy = g_screenSize.xy * r2.xy;
    r10.xy = r2.xy + r2.xy;
    r5.y = dot(r10.xy, r10.xy);
    r5.y = sqrt(r5.y);
    r5.y = min(1, r5.y);
    r6.y = dot(r14.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r6.y = r6.y * g_maxLuminanceInv + 1;
    r10.xyzw = r14.xxyz / r6.yyyy;
    r6.y = dot(r13.xzw, float3(0.212599993,0.715200007,0.0722000003));
    r6.y = r6.y * g_maxLuminanceInv + 1;
    r14.yzw = r13.xzw / r6.yyy;
    r13.xzw = float3(0.25,0.5,0.5) * r14.yyz;
    r6.y = r13.x + r13.w;
    r15.x = r14.w * 0.25 + r6.y;
    r6.y = r14.z * 0.5 + -r13.x;
    r15.y = -r14.w * 0.25 + r6.y;
    r15.z = -r14.w * 0.5 + r13.z;
    r13.xzw = float3(0.25,0.5,0.5) * r10.xyz;
    r6.y = r13.x + r13.w;
    r16.x = r10.w * 0.25 + r6.y;
    r6.y = r10.z * 0.5 + -r13.x;
    r16.y = -r10.w * 0.25 + r6.y;
    r16.z = -r10.w * 0.5 + r13.z;
    r10.xyz = float3(0.715200007,0.715200007,0.715200007) * r6.xzw;
    r10.xyz = r5.xzw * float3(0.212599993,0.212599993,0.212599993) + r10.xyz;
    r10.xyz = r7.xzw * float3(0.0722000003,0.0722000003,0.0722000003) + r10.xyz;
    r10.xyz = r10.xyz * g_maxLuminanceInv + float3(1,1,1);
    r17.x = r5.x;
    r17.y = r6.x;
    r17.z = r7.x;
    r13.xzw = r17.xyz / r10.xxx;
    r6.xy = float2(0.715200007,0.715200007) * r12.xy;
    r6.xy = r11.xy * float2(0.212599993,0.212599993) + r6.xy;
    r6.xy = r0.zw * float2(0.0722000003,0.0722000003) + r6.xy;
    r6.xy = r6.xy * g_maxLuminanceInv + float2(1,1);
    r11.z = r12.x;
    r11.w = r0.z;
    r11.xzw = r11.xzw / r6.xxx;
    r7.x = r5.z;
    r7.y = r6.z;
    r10.xyw = r7.xyz / r10.yyy;
    r5.xz = float2(0.715200007,0.715200007) * r9.xy;
    r5.xz = r4.xy * float2(0.212599993,0.212599993) + r5.xz;
    r5.xz = r1.zw * float2(0.0722000003,0.0722000003) + r5.xz;
    r5.xz = r5.xz * g_maxLuminanceInv + float2(1,1);
    r4.z = r9.x;
    r4.w = r1.z;
    r4.xzw = r4.xzw / r5.xxx;
    r9.z = r4.y;
    r9.w = r1.w;
    r9.xyz = r9.zyw / r5.zzz;
    r0.z = dot(r3.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r0.z = r0.z * g_maxLuminanceInv + 1;
    r3.xyz = r3.xyz / r0.zzz;
    r7.x = r5.w;
    r7.y = r6.w;
    r5.xzw = r7.xyw / r10.zzz;
    r12.z = r11.y;
    r12.w = r0.w;
    r6.xyz = r12.zyw / r6.yyy;
    r7.xyz = float3(0.25,0.5,0.5) * r13.xxz;
    r0.z = r7.x + r7.z;
    r12.x = r13.w * 0.25 + r0.z;
    r0.z = r13.z * 0.5 + -r7.x;
    r12.y = -r13.w * 0.25 + r0.z;
    r12.z = -r13.w * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r11.xxz;
    r0.z = r7.x + r7.z;
    r17.x = r11.w * 0.25 + r0.z;
    r0.z = r11.z * 0.5 + -r7.x;
    r17.y = -r11.w * 0.25 + r0.z;
    r17.z = -r11.w * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r10.xxy;
    r0.z = r7.x + r7.z;
    r18.x = r10.w * 0.25 + r0.z;
    r0.z = r10.y * 0.5 + -r7.x;
    r18.y = -r10.w * 0.25 + r0.z;
    r18.z = -r10.w * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r4.xxz;
    r0.z = r7.x + r7.z;
    r19.x = r4.w * 0.25 + r0.z;
    r0.z = r4.z * 0.5 + -r7.x;
    r19.y = -r4.w * 0.25 + r0.z;
    r19.z = -r4.w * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r9.xxy;
    r0.z = r7.x + r7.z;
    r20.x = r9.z * 0.25 + r0.z;
    r0.z = r9.y * 0.5 + -r7.x;
    r20.y = -r9.z * 0.25 + r0.z;
    r20.z = -r9.z * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r3.xxy;
    r0.z = r7.x + r7.z;
    r21.x = r3.z * 0.25 + r0.z;
    r0.z = r3.y * 0.5 + -r7.x;
    r21.y = -r3.z * 0.25 + r0.z;
    r21.z = -r3.z * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r5.xxz;
    r0.z = r7.x + r7.z;
    r22.x = r5.w * 0.25 + r0.z;
    r0.z = r5.z * 0.5 + -r7.x;
    r22.y = -r5.w * 0.25 + r0.z;
    r22.z = -r5.w * 0.5 + r7.y;
    r7.xyz = float3(0.25,0.5,0.5) * r6.xxy;
    r0.z = r7.x + r7.z;
    r23.x = r6.z * 0.25 + r0.z;
    r0.z = r6.y * 0.5 + -r7.x;
    r23.y = -r6.z * 0.25 + r0.z;
    r23.z = -r6.z * 0.5 + r7.y;
    r7.xyz = min(r23.xyz, r20.xyz);
    r7.xyz = min(r7.xyz, r21.xyz);
    r7.xyz = min(r22.xyz, r7.xyz);
    r20.yzw = max(r23.xyz, r20.xyz);
    r20.yzw = max(r20.yzw, r21.xyz);
    r20.yzw = max(r22.xyz, r20.yzw);
    r7.xyz = min(r15.xyz, r7.xyz);
    r20.yzw = max(r20.yzw, r15.xyz);
    r21.yzw = min(r18.xyz, r17.xyz);
    r21.yzw = min(r21.yzw, r19.xyz);
    r22.yzw = min(r15.xyz, r12.xyz);
    r21.yzw = min(r22.yzw, r21.yzw);
    r17.yzw = max(r18.xyz, r17.xyz);
    r17.yzw = max(r17.yzw, r19.xyz);
    r12.yzw = max(r15.xyz, r12.xyz);
    r12.yzw = max(r12.yzw, r17.yzw);
    r7.xyz = min(r21.yzw, r7.xyz);
    r15.yzw = max(r12.yzw, r20.yzw);
    r7.xyz = r21.yzw + r7.xyz;
    r12.yzw = r15.yzw + r12.yzw;
    r15.yzw = float3(0.5,0.5,0.5) * r12.yzw;
    r0.z = r12.x * 2 + r22.x;
    r0.z = r0.z + r20.x;
    r0.w = r17.x * 2 + r23.x;
    r0.w = r0.w + r21.x;
    r0.z = max(r0.z, r0.w);
    r0.w = r18.x * 2 + r22.x;
    r0.w = r0.w + r23.x;
    r1.z = r19.x * 2 + r20.x;
    r1.z = r1.z + r21.x;
    r0.w = max(r1.z, r0.w);
    r1.z = r15.x * 2 + r18.x;
    r1.z = r1.z + r19.x;
    r1.w = r15.x * 2 + r12.x;
    r1.w = r1.w + r17.x;
    r0.zw = float2(0.25,0.25) * r0.zw;
    r0.zw = max(float2(0.200000003,0.200000003), r0.zw);
    r1.zw = float2(0.25,0.25) * r1.zw;
    r1.zw = max(float2(0.200000003,0.200000003), r1.zw);
    r0.zw = r0.zw / r1.zw;
    r0.z = 1 + -r0.z;
    r0.z = r0.z + -r0.w;
    r0.z = 1 + r0.z;
    r0.z = cmp(0.200000003 < r0.z);
    r0.w = (int)r0.y + 64;
    r0.y = r0.z ? r0.w : r0.y;
    r15.xyz = r7.xyz * float3(0.5,0.5,0.5) + r15.yzw;
    r17.xyz = float3(0.5,0.5,0.5) * r15.xyz;
    r0.z = r15.x * 0.5 + -r17.y;
    r18.x = r15.z * 0.5 + r0.z;
    r18.y = r17.x + r17.y;
    r18.z = -r15.z * 0.5 + r0.z;
    r15.xyz = -r15.xyz * float3(0.5,0.5,0.5) + r16.xyz;
    r16.xyz = float3(1,1,1) / r15.xyz;
    r7.xyz = r7.xyz * float3(0.5,0.5,0.5) + -r17.xyz;
    r7.xyz = r7.xyz * r16.xyz;
    r12.xyz = r12.yzw * float3(0.5,0.5,0.5) + -r17.xyz;
    r12.xyz = r12.xyz * r16.xyz;
    r16.xyz = cmp(r7.xyz < float3(0,0,0));
    r7.xyz = r16.xyz ? float3(1000,1000,1000) : r7.xyz;
    r16.xyz = cmp(r12.xyz < float3(0,0,0));
    r12.xyz = r16.xyz ? float3(1000,1000,1000) : r12.xyz;
    r7.xyz = min(r12.xyz, r7.xyz);
    r7.xyz = min(float3(1,1,1), r7.xyz);
    r7.xyz = r7.xyz * r15.xyz + r17.xyz;
    r0.z = r7.x + -r7.y;
    r12.x = r0.z + r7.z;
    r12.y = r7.x + r7.y;
    r12.z = r0.z + -r7.z;
    r0.zw = g_prevVelocityTex.SampleLevel(pointSampler_s, r1.xy, 0).xy;
    r1.z = cmp(abs(r0.z) >= 4);
    r1.w = cmp(r0.w != 1.000000);
    r1.z = r1.z ? r1.w : 0;
    r4.y = cmp(0 < r0.z);
    r6.w = cmp(r0.z < 0);
    r4.y = (int)-r4.y + (int)r6.w;
    r4.y = (int)r4.y;
    r4.y = -4 * r4.y;
    r1.z = r1.z ? r4.y : 0;
    r0.z = r1.z + r0.z;
    r1.x = g_prevDepthTex.SampleLevel(pointSampler_s, r1.xy, 0).x;
    r1.yz = (int2)r0.yy & int2(64,8);
    r4.y = cmp((int)r1.y != 0);
    r6.w = (uint)r3.w >> 10;
    r3.w = (int)r3.w & 255;
    r7.xy = (uint2)g_frameBits.wz;
    r7.xz = (int2)r3.ww & (int2)r7.xy;
    r1.y = r1.y ? r7.y : 0;
    r1.y = (int)r1.y | (int)r7.x;
    r1.y = r1.z ? 0 : r1.y;
    r1.z = countbits((uint)r1.y);
    r7.x = cmp((int)r7.z != 0);
    r4.y = cmp((int)r4.y != (int)r7.x);
    r6.w = (int)r6.w + -1;
    r6.w = max(0, (int)r6.w);
    r3.w = cmp((int)r1.y == (int)r3.w);
    r1.z = cmp(0 < (uint)r1.z);
    r1.z = r1.z ? r3.w : 0;
    r3.w = (int)r0.y + 16;
    r0.y = r1.z ? r3.w : r0.y;
    r1.z = (uint)r6.w << 10;
    r1.z = r4.y ? 8192 : r1.z;
    r1.y = (int)r1.y | (int)r1.z;
    r7.xyzw = (int4)r0.yyyy & int4(16,2,4,1);
    r1.z = r7.x ? 256 : 0;
    r15.x = (int)r1.z | (int)r1.y;
    r1.y = 1 + -r5.y;
    r1.y = r7.y ? r1.y : 1;
    r12.w = r7.z ? 0 : r1.y;
    r1.y = cmp((int)r7.w == 0);
    r7.xyw = (int3)r0.yyy & int3(8,512,128);
    r1.z = cmp((int)r7.x != 0);
    r1.z = (int)r1.z | (int)r1.y;
    r3.w = cmp(r5.y >= 1);
    r1.z = r1.z ? r3.w : 0;
    r7.xy = cmp((int2)r7.yw == int2(0,0));
    r1.z = r1.z ? r7.x : 0;
    r1.z = r7.y ? r1.z : 0;
    r1.x = cmp(r1.x < r0.x);
    r3.w = r1.x ? r1.w : 0;
    r16.xyz = r3.www ? r18.xyz : r12.xyz;
    r3.w = r3.w ? 0 : 1;
    r16.w = min(r12.w, r3.w);
    r12.xyzw = r1.zzzz ? r16.xyzw : r12.xyzw;
    r1.y = r1.w ? r1.y : 0;
    r1.y = r7.x ? r1.y : 0;
    r0.zw = g_screenSize.xy * r0.zw;
    r0.zw = r0.zw + r0.zw;
    r0.z = dot(r0.zw, r0.zw);
    r0.z = sqrt(r0.z);
    r0.z = min(1, r0.z);
    r0.z = cmp(r0.z >= 1);
    r0.z = r1.x ? r0.z : 0;
    r0.x = cmp(r0.x != 1.000000);
    r0.x = r0.x ? r0.z : 0;
    r0.x = r0.x ? 0 : r12.w;
    r0.x = r1.y ? r0.x : r12.w;
    r0.z = (int)r0.y + 32;
    r0.y = r7.z ? r0.z : r0.y;
    r0.z = (int)r0.y & 4;
    if (r0.z == 0) {
      r1.xyzw = g_screenSize.zwzw * float4(-0.5,-0.5,0.5,-0.5) + r2.zwzw;
      r0.zw = g_screenSize.zw * float2(-0.5,0.5) + r2.zw;
      r7.xyzw = g_historyBitTex.Gather(pointSampler_s, r1.xy).xyzw;
      r1.xy = g_historyBitTex.Gather(pointSampler_s, r1.zw).yz;
      r0.zw = g_historyBitTex.Gather(pointSampler_s, r0.zw).xy;
      r1.zw = g_screenSize.zw + r2.zw;
      r1.zw = g_screenSize.xy * r1.zw;
      r16.xy = (uint2)r1.zw;
      r16.zw = float2(0,0);
      r1.z = g_historyBitTex.Load(r16.xyz).x;
      r1.w = (int)r7.z | (int)r7.w;
      r1.y = (int)r1.y | (int)r1.w;
      r1.y = (int)r7.x | (int)r1.y;
      r1.y = (int)r7.y | (int)r1.y;
      r1.x = (int)r1.x | (int)r1.y;
      r0.w = (int)r0.w | (int)r1.x;
      r0.z = (int)r0.z | (int)r0.w;
      r0.z = (int)r1.z | (int)r0.z;
      r0.z = (int)r0.z & 256;
      r0.w = (int)r0.y | 32;
      r1.x = (int)r0.y & 2783;
      r0.y = r0.z ? r0.w : r1.x;
    }
    r1.xyzw = (int4)r0.yyyy & int4(32,16,2,4);
    if (r1.x != 0) {
      r0.yzw = r14.yzw;
    } else {
      r7.xyz = g_reconstructMatrix._m01_m01_m01 * r10.xyw;
      r5.xyz = r5.xzw * g_reconstructMatrix._m00_m00_m00 + r7.xyz;
      r5.xyz = r6.xyz * g_reconstructMatrix._m02_m02_m02 + r5.xyz;
      r5.xyz = r13.xzw * g_reconstructMatrix._m10_m10_m10 + r5.xyz;
      r5.xyz = r11.xzw * g_reconstructMatrix._m12_m12_m12 + r5.xyz;
      r5.xyz = r9.xyz * g_reconstructMatrix._m20_m20_m20 + r5.xyz;
      r4.xyz = r4.xzw * g_reconstructMatrix._m21_m21_m21 + r5.xyz;
      r3.xyz = r3.xyz * g_reconstructMatrix._m22_m22_m22 + r4.xyz;
      r0.yzw = r14.yzw * g_reconstructMatrix._m11_m11_m11 + r3.xyz;
    }
    r1.x = dot(r2.xy, r2.xy);
    r1.x = sqrt(r1.x);
    r1.x = 0.0625 * r1.x;
    r1.x = min(1, r1.x);
    r1.x = r1.x * -0.49999997 + 0.899999976;
    r1.x = r1.y ? 0.995000005 : r1.x;
    r0.x = r1.x * r0.x;
    r1.x = cmp((int)r1.z != 0);
    r1.x = r1.x ? r13.y : 0;
    r0.x = r1.x ? 0.800000012 : r0.x;
    r1.xyz = r12.xyz + -r0.yzw;
    r0.xyz = r0.xxx * r1.xyz + r0.yzw;
    r0.w = dot(r0.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r0.w = -r0.w * g_maxLuminanceInv + 1;
    r0.w = max(9.99999975e-006, r0.w);
    r15.yzw = r0.xyz / r0.www;
    r14.x = 0;
    r8.xyzw = r1.wwww ? r14.yzwx : r15.yzwx;
    r8.xyz = max(float3(0,0,0), r8.xyz);
  }
  r0.xyz = (int3)r8.xyz & int3(0x7fffffff,0x7fffffff,0x7fffffff);
  r0.xyz = cmp((int3)r0.xyz == int3(0x7f800000,0x7f800000,0x7f800000));
  r0.x = (int)r0.y | (int)r0.x;
  r0.x = (int)r0.z | (int)r0.x;
  r0.yzw = cmp(r8.xyz < float3(0,0,0));
  r1.xyz = cmp(float3(0,0,0) < r8.xyz);
  r0.yzw = (int3)r0.yzw | (int3)r1.xyz;
  r1.xyz = cmp(r8.xyz == float3(0,0,0));
  r0.yzw = (int3)r0.yzw | (int3)r1.xyz;
  r0.yzw = ~(int3)r0.yzw;
  r0.y = (int)r0.z | (int)r0.y;
  r0.y = (int)r0.w | (int)r0.y;
  r0.x = (int)r0.y | (int)r0.x;
  r0.xyzw = r0.xxxx ? float4(0,0,0,0) : r8.xyzw;
  o0.xyz = r0.xyz;
  o1.x = r0.w;
  return;
}